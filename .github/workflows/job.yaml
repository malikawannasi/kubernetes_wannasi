name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: docker build -t malikawannasifreelance/helloworldapp:latest .
      - name: Push Docker image
        run: docker push malikawannasifreelance/helloworldapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

    # Setup Kubernetes credentials and context (if needed)
    # Uncomment the following lines and use the appropriate action for your cloud provider
    # - name: Set up Kubernetes credentials
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}
    #     enable-AKS: true
    #   # For Google Cloud, use google-github-actions/get-gke-credentials@v0

    # Change directory to the location of the Kubernetes manifests
      - name: Change directory to templates
        working-directory: hello-world-app/templates
        run: echo "Changed to templates directory"

    # Apply Kubernetes manifests
        # - name: Apply Kubernetes manifests
        #  working-directory: hello-world-app/templates
          #   run: |
          #    echo "Applying Kubernetes manifests..."
          #    kubectl get pods
          #   kubectl get all
          #  kubectl get namespaces
          #  kubectl apply --validate=false -f deployment.yaml
          #  kubectl apply --validate=false -f service.yaml
          # kubectl apply --validate=false -f networkpolicy.yaml
        # echo "Manifests applied successfully."

